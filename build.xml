<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<project name="sched-assist-oracle-support" basedir="." xmlns:artifact="urn:maven-artifact-ant">

	<property file="build.properties"/>
	
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant">
		<classpath>
			<pathelement location="${basedir}/bootstrap/maven-ant-tasks-2.0.10.jar" />
		</classpath>
	</typedef>
	
	<target name="maven-install-oracle-csdk" description="Install Oracle CSDK in your local maven repository (MUST specify 'csdk.jar' in build.properties first)">
		<artifact:pom id="oracle-csdk.pom" file="${basedir}/bootstrap/oracle-csdk-pom.xml"/>
		<artifact:install file="${csdk.jar}">
			<pom refid="oracle-csdk.pom"/>
		</artifact:install>
	</target>

	<target name="deploy-oracle-csdk-and-loader" description="Deploys Oracle CSDK and oracle-csdk-loader dependency to the Tomcat shared classloader directory">
		<artifact:pom id="pom" file="pom.xml" />
		<copy todir="${tomcat.home}/shared/lib">
			<fileset file="${csdk.jar}"/>
			<fileset file="oracle-csdk-loader/target/oracle-csdk-loader-${pom.version}.jar"/>
		</copy>
		<echo message="Don't forget to modify ${tomcat.home}/conf/catalina.properties and set the 'shared.loader' property to '${catalina.home}/shared/lib/*.jar'"/>
	</target>
	
	<!-- This target removes the web application from the tomcat installation
					you defined in build.properties -->
	<target name="clean-webapp" description="Removes Scheduling Assistant from Tomcat webapps directory">
		<delete file="${tomcat.home}/webapps/scheduling-assistant.war" />
		<delete dir="${tomcat.home}/webapps/scheduling-assistant" />
	</target>

	<!-- this target copies the war file you built (using mvn package) to the
			tomcat installation you defined in build.properties -->
	<target name="deploy-oraclecalendar-war" description="Copies the Scheduling Assistant war to the Tomcat webapps directory">
		<copy file="${basedir}/sched-assist-war-oraclecalendar/target/scheduling-assistant.war" todir="${tomcat.home}/webapps" />
	</target>

	<target name="redeploy-war" description="Shortcut to invoke 'clean-webapp' and 'deploy-oraclecalendar-war' targets">
		<antcall target="clean-webapp" />
		<antcall target="deploy-oraclecalendar-war" />
	</target>
	
</project>
